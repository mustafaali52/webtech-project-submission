// <auto-generated />
using System;
using Event_Mangement_System_WebTech_Project.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Event_Mangement_System_WebTech_Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250702202735_UserTableUpdate")]
    partial class UserTableUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.Event", b =>
                {
                    b.Property<int>("eventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("eventId"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("eventTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("eventTypeId")
                        .HasColumnType("int");

                    b.Property<int>("locationId")
                        .HasColumnType("int");

                    b.Property<int>("organizerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("eventId");

                    b.HasIndex("eventTypeId");

                    b.HasIndex("organizerId");

                    b.HasIndex("locationId", "startDate", "endDate");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.EventType", b =>
                {
                    b.Property<int>("typeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("typeId"));

                    b.Property<string>("typeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("typeId");

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.Location", b =>
                {
                    b.Property<int>("locationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("locationId"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("capacity")
                        .HasColumnType("int");

                    b.Property<string>("locationName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("locationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.Registration", b =>
                {
                    b.Property<int>("registrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("registrationId"));

                    b.Property<int>("attendeeId")
                        .HasColumnType("int");

                    b.Property<int>("eventId")
                        .HasColumnType("int");

                    b.Property<bool>("isConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("registeredAt")
                        .HasColumnType("datetime2");

                    b.HasKey("registrationId");

                    b.HasIndex("eventId");

                    b.HasIndex("attendeeId", "eventId")
                        .IsUnique();

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.Role", b =>
                {
                    b.Property<int>("roleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roleId"));

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("roleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("passwordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("userRoleId")
                        .HasColumnType("int");

                    b.HasKey("userId");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("userRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.Event", b =>
                {
                    b.HasOne("Event_Mangement_System_WebTech_Project.Models.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("eventTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Event_Mangement_System_WebTech_Project.Models.Location", "Location")
                        .WithMany("Events")
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Event_Mangement_System_WebTech_Project.Models.User", "Organizer")
                        .WithMany("OrganizedEvents")
                        .HasForeignKey("organizerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EventType");

                    b.Navigation("Location");

                    b.Navigation("Organizer");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.Registration", b =>
                {
                    b.HasOne("Event_Mangement_System_WebTech_Project.Models.User", "Attendee")
                        .WithMany("Registrations")
                        .HasForeignKey("attendeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Mangement_System_WebTech_Project.Models.Event", "Event")
                        .WithMany("Registrations")
                        .HasForeignKey("eventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attendee");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.User", b =>
                {
                    b.HasOne("Event_Mangement_System_WebTech_Project.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("userRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.Event", b =>
                {
                    b.Navigation("Registrations");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.EventType", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.Location", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Event_Mangement_System_WebTech_Project.Models.User", b =>
                {
                    b.Navigation("OrganizedEvents");

                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
